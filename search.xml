<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github加速</title>
      <link href="/archives/e1b2e985.html"/>
      <url>/archives/e1b2e985.html</url>
      
        <content type="html"><![CDATA[<p>#主页地址：</p><h6 id="https-gh-mikuo-workers-dev"><a href="#https-gh-mikuo-workers-dev" class="headerlink" title="https://gh.mikuo.workers.dev/"></a><a href="https://gh.mikuo.workers.dev/">https://gh.mikuo.workers.dev/</a></h6><p>看到最近有更新就重弄了一下<br>可以自己搭建，亲测不错。</p><h2 id="使用方法示例："><a href="#使用方法示例：" class="headerlink" title="使用方法示例："></a>使用方法示例：</h2><h5 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h5><p>git clone <a href="https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus">https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus</a></p><h5 id="wget-amp-curl"><a href="#wget-amp-curl" class="headerlink" title="wget &amp; curl"></a>wget &amp; curl</h5><h5 id="wget-https-gh-mikuo-workers-dev-https-github-com-stilleshan-ServerStatus-archive-master-zip"><a href="#wget-https-gh-mikuo-workers-dev-https-github-com-stilleshan-ServerStatus-archive-master-zip" class="headerlink" title="wget https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus/archive/master.zip"></a>wget <a href="https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus/archive/master.zip">https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus/archive/master.zip</a></h5><h5 id="wget-https-gh-mikuo-workers-dev-https-raw-githubusercontent-com-stilleshan-ServerStatus-master-Dockerfile"><a href="#wget-https-gh-mikuo-workers-dev-https-raw-githubusercontent-com-stilleshan-ServerStatus-master-Dockerfile" class="headerlink" title="wget https://gh.mikuo.workers.dev/https://raw.githubusercontent.com/stilleshan/ServerStatus/master/Dockerfile"></a>wget <a href="https://gh.mikuo.workers.dev/https://raw.githubusercontent.com/stilleshan/ServerStatus/master/Dockerfile">https://gh.mikuo.workers.dev/https://raw.githubusercontent.com/stilleshan/ServerStatus/master/Dockerfile</a></h5><h5 id="curl-O-https-gh-mikuo-workers-dev-https-github-com-stilleshan-ServerStatus-archive-master-zip"><a href="#curl-O-https-gh-mikuo-workers-dev-https-github-com-stilleshan-ServerStatus-archive-master-zip" class="headerlink" title="curl -O https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus/archive/master.zip"></a>curl -O <a href="https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus/archive/master.zip">https://gh.mikuo.workers.dev/https://github.com/stilleshan/ServerStatus/archive/master.zip</a></h5><h5 id="curl-O-https-gh-mikuo-workers-dev-https-raw-githubusercontent-com-stilleshan-ServerStatus-master-Dockerfile"><a href="#curl-O-https-gh-mikuo-workers-dev-https-raw-githubusercontent-com-stilleshan-ServerStatus-master-Dockerfile" class="headerlink" title="curl -O https://gh.mikuo.workers.dev/https://raw.githubusercontent.com/stilleshan/ServerStatus/master/Dockerfile"></a>curl -O <a href="https://gh.mikuo.workers.dev/https://raw.githubusercontent.com/stilleshan/ServerStatus/master/Dockerfile">https://gh.mikuo.workers.dev/https://raw.githubusercontent.com/stilleshan/ServerStatus/master/Dockerfile</a></h5><p>基于<a href="https://github.com/hunshcn/gh-proxy">https://github.com/hunshcn/gh-proxy</a> cloudfare版本<br>说明：克隆地址为 <a href="https://github.com/stilleshan/ServerStatus.git">https://github.com/stilleshan/ServerStatus.git</a> 应该改为<br><a href="https://github.com/stilleshan/ServerStatus">https://github.com/stilleshan/ServerStatus</a> （即去掉.git）<br>速度测试：速度能跑满50m的带宽，最高能到7Mb/s多<br>仓库较大<br>git clone <a href="https://gh.mikuo.workers.dev/https://github.com/cxw9/video-Bed">https://gh.mikuo.workers.dev/https://github.com/cxw9/video-Bed</a></p><p><img src="https://mikuo.top/wp-content/uploads/2021/05/YP_NYFY2Q62QJ699-300x109.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python FastApi 快速做api接口</title>
      <link href="/archives/6f4f205b.html"/>
      <url>/archives/6f4f205b.html</url>
      
        <content type="html"><![CDATA[<h1 id="python-FastApi-快速做api接口"><a href="#python-FastApi-快速做api接口" class="headerlink" title="python FastApi 快速做api接口"></a>python FastApi 快速做api接口</h1><p>首先需要安装模块如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pip install fastapi</span><br><span class="line">pip install uvicorn</span><br><span class="line">运行代码</span><br><span class="line"></span><br><span class="line">import uvicorn as uvicorn</span><br><span class="line">from fastapi import FastAPI</span><br><span class="line">from pydantic import BaseModel</span><br><span class="line">app = FastAPI()  # 必须实例化该类，启动的时候调用</span><br><span class="line">class People(BaseModel):  # 必须继承</span><br><span class="line">    name: str</span><br><span class="line">    age: int</span><br><span class="line">    address: str</span><br><span class="line">    salary: float</span><br></pre></td></tr></table></figure><h1 id="请求根目录"><a href="#请求根目录" class="headerlink" title="请求根目录"></a>请求根目录</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@app.get(&#x27;/&#x27;)</span><br><span class="line">def index():</span><br><span class="line">    return &#123;&#x27;message&#x27;: &#x27;欢迎来到FastApi 服务！&#x27;&#125;</span><br></pre></td></tr></table></figure><h1 id="get请求带参数数据"><a href="#get请求带参数数据" class="headerlink" title="get请求带参数数据"></a>get请求带参数数据</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@app.get(&#x27;/items/&#123;item_id&#125;&#x27;)</span><br><span class="line">def items(item_id: int):</span><br><span class="line">    return &#123;&#x27;message&#x27;: &#x27;欢迎来到接口页面&#x27;&#125;</span><br></pre></td></tr></table></figure><h1 id="post请求带参数数据"><a href="#post请求带参数数据" class="headerlink" title="post请求带参数数据"></a>post请求带参数数据</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@app.post(&#x27;/people&#x27;)</span><br><span class="line">def insert(people: People):</span><br><span class="line">    age = people.age</span><br><span class="line">    msg = f&#x27;名字：&#123;people.name&#125;，年龄：&#123;age&#125;&#x27;</span><br><span class="line">    return &#123;&#x27;success&#x27;: True, &#x27;msg&#x27;: msg&#125;</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    uvicorn.run(app=app, host=&quot;127.0.0.1&quot;, port=8080)</span><br></pre></td></tr></table></figure><p>运行命令</p><p>uvicorn main:app –reload<br>快速文档</p><p><a href="http://127.0.0.1:8000/docs">http://127.0.0.1:8000/docs</a><br><a href="http://127.0.0.1:8000/redoc">http://127.0.0.1:8000/redoc</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自动同步到github</title>
      <link href="/archives/53d9f3fb.html"/>
      <url>/archives/53d9f3fb.html</url>
      
        <content type="html"><![CDATA[<h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>确保你有git 没有的话 安装一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h3 id="1-设置全局用户名"><a href="#1-设置全局用户名" class="headerlink" title="1.设置全局用户名"></a>1.设置全局用户名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br></pre></td></tr></table></figure><h3 id="2-设置全局邮箱"><a href="#2-设置全局邮箱" class="headerlink" title="2.设置全局邮箱"></a>2.设置全局邮箱</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;你的GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="3设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：-（设置正确的话用不到）"><a href="#3设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：-（设置正确的话用不到）" class="headerlink" title="3设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：   （设置正确的话用不到）"></a>3设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：   （设置正确的话用不到）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --reset-author</span><br></pre></td></tr></table></figure><h3 id="4生成公钥和私钥"><a href="#4生成公钥和私钥" class="headerlink" title="4生成公钥和私钥"></a>4生成公钥和私钥</h3><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><p>连按三下回车</p><h3 id="5复制公钥到github"><a href="#5复制公钥到github" class="headerlink" title="5复制公钥到github"></a>5复制公钥到github</h3><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>复制上面公钥内容到</p><p>github的settings→SSH and GPG keys→New SSH key</p><h3 id="6给与脚本权限"><a href="#6给与脚本权限" class="headerlink" title="6给与脚本权限"></a>6给与脚本权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x up.sh</span><br></pre></td></tr></table></figure><h3 id="脚本内容"><a href="#脚本内容" class="headerlink" title="脚本内容"></a>脚本内容</h3><p>执行脚本之前应该测试下克隆自己的github仓库因为.ssh 中少一个文件  例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:cxw9/cdn.git  </span><br></pre></td></tr></table></figure><p>日志</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Cloning into &#x27;cdn&#x27;...</span><br><span class="line">The authenticity of host &#x27;github.com (140.82.113.4)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class="line">RSA key fingerprint is MD5:16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &#x27;github.com,140.82.113.4&#x27; (RSA) to the list of known hosts.</span><br><span class="line">remote: Enumerating objects: 5143, done.</span><br><span class="line">remote: Counting objects: 100% (30/30), done.</span><br><span class="line">remote: Compressing objects: 100% (28/28), done.</span><br><span class="line">remote: Total 5143 (delta 3), reused 28 (delta 1), pack-reused 5113</span><br><span class="line">Receiving objects: 100% (5143/5143), 385.48 MiB | 6.86 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (558/558), done.</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p>脚本 /www/cdn 替换为你的位置 可能需要给 /www/cdn  权限 chmod 777 /www/cdn (一般不用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /www/cdn </span><br><span class="line">git add .</span><br><span class="line">time3=$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line">git commit -m &quot;$time3&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>git push origin master  可以写为  git push 两者区别在于 一个通过 <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#x63;&#111;&#x6d;">&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#x63;&#111;&#x6d;</a>:cxw9/uploads.git</p><p>一个通过 <a href="https://github.com/cxw9/uploads.git">https://github.com/cxw9/uploads.git</a>  (?)</p><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> fatal: Not a git repository (or any of the parent directories): .git </span><br><span class="line"></span><br><span class="line">提示说没有.git这样一个目录</span><br><span class="line"></span><br><span class="line">在命令行 输入 git init 然后回车就好了</span><br><span class="line"></span><br><span class="line">如果确实存在 .git 可能是linux权限问题</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Linux中解决cannot access ‘\r’: No such file or directory</span><br><span class="line">碰到这种情况，是因为脚本文件在windows环境下编辑过后再上传到linux服务器导致换行符格式不对。使用dos2unix命令行即可解决。</span><br><span class="line"></span><br><span class="line">进入root用户后，使用yum install dos2unix。</span><br><span class="line"></span><br><span class="line">安装完成后使用命令 dos2unix start.sh 其中start.sh为出问题的脚本文件名，也可以使用*通配符来同时修改多个，或者使用空格隔开文件名的方式。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-脚本位置不建议放网站目录下-不要让别人能访问到。"><a href="#3-脚本位置不建议放网站目录下-不要让别人能访问到。" class="headerlink" title="3 脚本位置不建议放网站目录下 不要让别人能访问到。"></a>3 脚本位置不建议放网站目录下 不要让别人能访问到。</h3><h3 id="4宝塔脚本定时任务无法执行"><a href="#4宝塔脚本定时任务无法执行" class="headerlink" title="4宝塔脚本定时任务无法执行"></a>4宝塔脚本定时任务无法执行</h3><p>一次在脚本里写这两句:</p><p>git config –global user.name “your name here”  </p><p>git config –global user.email “your <a href="mailto:&#x65;&#109;&#97;&#x69;&#108;&#64;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#109;">&#x65;&#109;&#97;&#x69;&#108;&#64;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#109;</a>“</p><p>报错为</p><p>fatal: $HOME not set</p><p>最终的解决办法为将上述两行改为</p><p>git config –system user.email “your name here”<br>git config –system user.name “your <a href="mailto:&#101;&#109;&#x61;&#x69;&#108;&#64;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#101;&#109;&#x61;&#x69;&#108;&#64;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>“</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>直接爬取360图片链接</title>
      <link href="/archives/d49b7c14.html"/>
      <url>/archives/d49b7c14.html</url>
      
        <content type="html"><![CDATA[<h1 id="直接爬取360图片链接"><a href="#直接爬取360图片链接" class="headerlink" title="直接爬取360图片链接"></a>直接爬取360图片链接</h1><h4 id="最后用了最简单的-joy"><a href="#最后用了最简单的-joy" class="headerlink" title="最后用了最简单的:joy:"></a>最后用了最简单的:joy:</h4><p>写的有别的版本也有,但是这个最简单(还能简化,没做，我也不用这种方式)，也不会出错，更没有复杂的检查等。</p><h2 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h2><h3 id="python3-python3自带sqlite3"><a href="#python3-python3自带sqlite3" class="headerlink" title="python3(python3自带sqlite3)"></a>python3(python3自带sqlite3)</h3><h4 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 接口 http://wallpaper.apc.360.cn/index.php?c=WallPaper&amp;a=getAppsByCategory&amp;cid=【分类ID】&amp;start=【0开始】&amp;count=【加载数】&amp;from=360chrome</span></span><br><span class="line"><span class="comment"># http://wallpaper.apc.360.cn/index.php?c=WallPaper&amp;a=getAppsByCategory&amp;cid=10&amp;start=0&amp;count=1&amp;from=360chrome</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createTables</span>():</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;360img.db&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 创建表</span></span><br><span class="line">    sql = <span class="string">&#x27;CREATE TABLE text10(mid integer PRIMARY KEY autoincrement, data TEXT)&#x27;</span></span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    <span class="comment"># 提交事物</span></span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># createTables() #创建数据库时使用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertTables</span>(<span class="params">d</span>):</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;360img.db&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 插入数据</span></span><br><span class="line">    sql1 = <span class="string">&quot;INSERT INTO text10(data) VALUES(&#x27;&#123;&#125;&#x27;)&quot;</span></span><br><span class="line">    sql = sql1.<span class="built_in">format</span>(<span class="built_in">str</span>(d))</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提交事物</span></span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conUrl</span>():</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    f1 = <span class="built_in">open</span>(<span class="string">&quot;text10.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> index, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(f1):</span><br><span class="line">        start += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    payload = &#123;<span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;WallPaper&#x27;</span>, <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;getAppsByCategory&#x27;</span>, <span class="string">&#x27;cid&#x27;</span>: <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;start&#x27;</span>: start, <span class="string">&#x27;count&#x27;</span>: <span class="string">&#x27;200&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;from&#x27;</span>: <span class="string">&#x27;360chrome&#x27;</span>&#125;</span><br><span class="line">    r = requests.get(<span class="string">&#x27;http://wallpaper.apc.360.cn/index.php&#x27;</span>, params=payload)</span><br><span class="line">    <span class="comment"># 获取json的data字段</span></span><br><span class="line">    jsData = r.json()[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;text10.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jsData:</span><br><span class="line">        strS = <span class="built_in">str</span>(i).replace(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>)  <span class="comment"># 字符串转json</span></span><br><span class="line">        dictJson = json.loads(strS)  <span class="comment"># 字符串转字典</span></span><br><span class="line">        <span class="comment"># 字典获取所有 k,values</span></span><br><span class="line">        strI = <span class="built_in">str</span>(i) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> strI <span class="keyword">not</span> <span class="keyword">in</span> f.readline():</span><br><span class="line">            f.write(<span class="built_in">str</span>(i) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            insertTables(strS)</span><br><span class="line"></span><br><span class="line">conUrl() <span class="comment">#用for循环先注释掉</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># 定时执行 暂时取消  用 循环执行</span></span><br><span class="line"><span class="string">def timGo():</span></span><br><span class="line"><span class="string">    count = 0</span></span><br><span class="line"><span class="string">    for i in range(10):</span></span><br><span class="line"><span class="string">        count += 1</span></span><br><span class="line"><span class="string">        conUrl()</span></span><br><span class="line"><span class="string">        print(&quot;执行次数&quot; + str(count))</span></span><br><span class="line"><span class="string">        time.sleep(10)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">timGo()</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>npm无法加载文件xx,因为在此系统上禁止运行脚本</title>
      <link href="/archives/269aaa9e.html"/>
      <url>/archives/269aaa9e.html</url>
      
        <content type="html"><![CDATA[<p>一、npm : 无法加载文件 (你的nodejs路径)\npm.ps1，因为在此系统上禁止运行脚本。我遇到的是webstorm 的npm 命令行经常无法运行npm install<br>二、因为在此系统上禁止运行脚本</p><ol><li>get-ExecutionPolicy 查看权限<br>get-ExecutionPolicy<br>1</li><li>输出：Restricted ：受限制的<br>Restricted<br>1</li><li>Restricted 表示状态是禁止的，那就给个权限：<br>Set-ExecutionPolicy -Scope CurrentUser<br>1</li><li>输入：RemoteSigned<br>RemoteSigned<br>1<br>验证一下：<br>get-ExecutionPolicy<br>1<br>显示：RemoteSigned 就可以了</li></ol><p>运行 npm run install 可以执行</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬取360图片链接</title>
      <link href="/archives/7399c5ba.html"/>
      <url>/archives/7399c5ba.html</url>
      
        <content type="html"><![CDATA[<h1 id="爬取360图片链接"><a href="#爬取360图片链接" class="headerlink" title="爬取360图片链接"></a>爬取360图片链接</h1><p>最后用了最简单的 写的有别的版本也有,但是这个最简单(还能简化,没做，我也不用这种方式)，也不会出错，更没有复杂的检查等。 要求： python3(python3自带sqlite3)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 接口 http://wallpaper.apc.360.cn/index.php?c=WallPaper&amp;a=getAppsByCategory&amp;cid=【分类ID】&amp;start=【0开始】&amp;count=【加载数】&amp;from=360chrome</span></span><br><span class="line"><span class="comment"># http://wallpaper.apc.360.cn/index.php?c=WallPaper&amp;a=getAppsByCategory&amp;cid=10&amp;start=0&amp;count=1&amp;from=360chrome</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createTables</span>():</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;360img.db&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 创建表</span></span><br><span class="line">    sql = <span class="string">&#x27;CREATE TABLE text10(mid integer PRIMARY KEY autoincrement, data TEXT)&#x27;</span></span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    <span class="comment"># 提交事物</span></span><br><span class="line">    conn.commit()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># createTables() #创建数据库时使用</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertTables</span>(<span class="params">d</span>):</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;360img.db&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 插入数据</span></span><br><span class="line">    sql1 = <span class="string">&quot;INSERT INTO text10(data) VALUES(&#x27;&#123;&#125;&#x27;)&quot;</span></span><br><span class="line">    sql = sql1.<span class="built_in">format</span>(<span class="built_in">str</span>(d))</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 提交事物</span></span><br><span class="line">    conn.commit()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conUrl</span>():</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    f1 = <span class="built_in">open</span>(<span class="string">&quot;text10.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> index, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(f1):</span><br><span class="line">        start += <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">    payload = &#123;<span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;WallPaper&#x27;</span>, <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;getAppsByCategory&#x27;</span>, <span class="string">&#x27;cid&#x27;</span>: <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;start&#x27;</span>: start, <span class="string">&#x27;count&#x27;</span>: <span class="string">&#x27;200&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;from&#x27;</span>: <span class="string">&#x27;360chrome&#x27;</span>&#125;</span><br><span class="line">    r = requests.get(<span class="string">&#x27;http://wallpaper.apc.360.cn/index.php&#x27;</span>, params=payload)</span><br><span class="line">    <span class="comment"># 获取json的data字段</span></span><br><span class="line">    jsData = r.json()[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;text10.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jsData:</span><br><span class="line">        strS = <span class="built_in">str</span>(i).replace(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>)  <span class="comment"># 字符串转json</span></span><br><span class="line">        dictJson = json.loads(strS)  <span class="comment"># 字符串转字典</span></span><br><span class="line">        <span class="comment"># 字典获取所有 k,values</span></span><br><span class="line">        strI = <span class="built_in">str</span>(i) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> strI <span class="keyword">not</span> <span class="keyword">in</span> f.readline():</span><br><span class="line">            f.write(<span class="built_in">str</span>(i) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            insertTables(strS)</span><br><span class="line"> </span><br><span class="line">conUrl() <span class="comment">#用for循环先注释掉</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># 定时执行 暂时取消  用 循环执行</span></span><br><span class="line"><span class="string">def timGo():</span></span><br><span class="line"><span class="string">    count = 0</span></span><br><span class="line"><span class="string">    for i in range(10):</span></span><br><span class="line"><span class="string">        count += 1</span></span><br><span class="line"><span class="string">        conUrl()</span></span><br><span class="line"><span class="string">        print(&quot;执行次数&quot; + str(count))</span></span><br><span class="line"><span class="string">        time.sleep(10)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">timGo()</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python裁剪图片</title>
      <link href="/archives/dbc0c148.html"/>
      <url>/archives/dbc0c148.html</url>
      
        <content type="html"><![CDATA[<h1 id="Python裁剪图片"><a href="#Python裁剪图片" class="headerlink" title="Python裁剪图片"></a>Python裁剪图片</h1><h2 id="个人适用版本"><a href="#个人适用版本" class="headerlink" title="个人适用版本"></a>个人适用版本</h2><p><strong>800x400 裁剪后符合大小</strong></p><p><strong>1920x400 裁剪后符合比例</strong></p><p><strong>配合imgbot 自动压缩无需处理压缩</strong></p><p><strong>cdn by jsdeliver</strong> </p><h4 id="待实现链接自动注入到文章"><a href="#待实现链接自动注入到文章" class="headerlink" title="待实现链接自动注入到文章"></a><strong>待实现链接自动注入到文章</strong></h4><p>链接url 分别放在 max.txt mid.txt min.txt</p><p>文件夹 max（原图） mid（比例为1920x400）  min（大小为800x400）</p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mpath = os.getcwd()</span></span><br><span class="line"><span class="comment"># print(Mpath)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原来文件夹</span></span><br><span class="line">source_dirs = <span class="string">&#x27;./max&#x27;</span></span><br><span class="line"><span class="comment"># 目标文件夹</span></span><br><span class="line">target_dirs = <span class="string">&#x27;./mid&#x27;</span></span><br><span class="line"><span class="comment"># 目标文件夹2</span></span><br><span class="line">target_dirs2 = <span class="string">&#x27;./min&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到图片的链接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getListFiles</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">assert</span> os.path.isdir(path), <span class="string">&#x27;%s not exist.&#x27;</span> % path</span><br><span class="line">    ret = []</span><br><span class="line">    <span class="comment"># 已经有的文件夹</span></span><br><span class="line">    has_dirs = []</span><br><span class="line">    <span class="comment"># 目录创建</span></span><br><span class="line">    <span class="comment"># 暂时有一个文件夹下多文件 读取问题没 解决 dirs files均为列表  已经解决</span></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(path):</span><br><span class="line">        <span class="comment"># print(&#x27;%s, %s, %s&#x27; % (root, dirs, files))</span></span><br><span class="line">        <span class="comment"># print(&#x27;%s, %s&#x27; % (dirs,files))</span></span><br><span class="line">        s = <span class="string">&#x27;&#x27;</span>.join(root) + <span class="string">&#x27;/&#x27;</span> + <span class="string">&#x27;&#x27;</span>.join(dirs)</span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">not</span> <span class="keyword">in</span> has_dirs:</span><br><span class="line">            has_dirs.append(s)</span><br><span class="line">        <span class="keyword">if</span> path == source_dirs:</span><br><span class="line">            create_dirs(has_dirs)</span><br><span class="line">        <span class="keyword">for</span> filesPath <span class="keyword">in</span> files:</span><br><span class="line">            ret.append(os.path.join(root, filesPath))</span><br><span class="line">    <span class="comment"># print(ret)</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建不存在文件夹</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_dirs</span>(<span class="params">has_dirs</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> has_dirs:</span><br><span class="line">        i = i.replace(source_dirs, target_dirs)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(i):</span><br><span class="line">            os.makedirs(i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> has_dirs:</span><br><span class="line">        i = i.replace(source_dirs, target_dirs2)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(i):</span><br><span class="line">            os.makedirs(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩放</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scale</span>(<span class="params">i</span>):</span></span><br><span class="line">    img = Image.<span class="built_in">open</span>(<span class="string">&#x27;&#x27;</span> + i)</span><br><span class="line">    <span class="comment"># 目标地址</span></span><br><span class="line">    bb = i.replace(source_dirs, target_dirs2)</span><br><span class="line">    bb = bb.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    width, height = img.size</span><br><span class="line">    w_s = <span class="built_in">int</span>(width / (width / <span class="number">800</span>))  <span class="comment"># 长宽缩小两倍</span></span><br><span class="line">    h_s = <span class="built_in">int</span>(height / (height / <span class="number">400</span>))  <span class="comment"># 长宽缩小两倍</span></span><br><span class="line">    img = img.resize((w_s, h_s), Image.ANTIALIAS)</span><br><span class="line">    blank = (w_s - h_s) / <span class="number">2</span></span><br><span class="line">    <span class="comment"># region = img.crop((0, -blank, w_s, w_s - blank))</span></span><br><span class="line">    region = img.crop((<span class="number">0</span>, <span class="number">0</span>, w_s, h_s))</span><br><span class="line">    region.save(bb)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 裁剪</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resize</span>(<span class="params">i</span>):</span></span><br><span class="line">    img = Image.<span class="built_in">open</span>(<span class="string">&#x27;&#x27;</span> + i)</span><br><span class="line">    <span class="comment"># 目标地址</span></span><br><span class="line">    bb = i.replace(source_dirs, target_dirs)</span><br><span class="line">    bb = bb.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    width, height = img.size</span><br><span class="line">    he = (width * <span class="number">400</span>) / <span class="number">1920</span></span><br><span class="line">    wi = (height - he) / <span class="number">2</span></span><br><span class="line">    <span class="comment"># print(he)</span></span><br><span class="line">    <span class="comment"># print(width,height)</span></span><br><span class="line">    <span class="comment"># 前两个坐标点是左上角坐标</span></span><br><span class="line">    <span class="comment"># 后两个坐标点是右下角坐标</span></span><br><span class="line">    <span class="comment"># width在前， height在后</span></span><br><span class="line">    box = (<span class="number">0</span>, wi, width, he + wi)</span><br><span class="line">    region = img.crop(box)</span><br><span class="line">    <span class="comment"># cc=bb.replace(&#x27;\\&#x27;,&#x27;&#x27;)</span></span><br><span class="line">    <span class="comment"># if os.path.exists(cc):</span></span><br><span class="line">    <span class="comment"># os.makedirs(cc)</span></span><br><span class="line">    <span class="comment"># 因为保存裁剪后的文件要求文件夹要存在故单独处理</span></span><br><span class="line">    region.save(bb)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接为链接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">join_url</span>(<span class="params">utl_txt, lst</span>):</span></span><br><span class="line">    file = utl_txt</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">        i = i.replace(<span class="string">&#x27;./&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        i = i.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        i1 = i.replace(<span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;mid&#x27;</span>)</span><br><span class="line">        i2 = i.replace(<span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">                url = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/runrab/cdn2@master/img&#x27;</span> + i + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> f1.readlines():</span><br><span class="line">                    f.write(url)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;mid.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;mid.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">                url = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/runrab/cdn2@master/img&#x27;</span> + i2 + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> f1.readlines():</span><br><span class="line">                    f.write(url)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;min.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;min.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">                url = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/runrab/cdn2@master/img&#x27;</span> + i2 + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> f1.readlines():</span><br><span class="line">                    f.write(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">declImg</span>():</span></span><br><span class="line">    a = getListFiles(source_dirs)</span><br><span class="line">    b = getListFiles(target_dirs)</span><br><span class="line">    c = getListFiles(target_dirs2)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> b:</span><br><span class="line">            b.append(i)</span><br><span class="line">            resize(i)</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> c:</span><br><span class="line">            c.append(i)</span><br><span class="line">            scale(i)</span><br><span class="line">    join_url(<span class="string">r&quot;max.txt&quot;</span>, a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declImg()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#导出requirements.txt</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>等待改动</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的网盘</title>
      <link href="/archives/855e324c.html"/>
      <url>/archives/855e324c.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于："><a href="#基于：" class="headerlink" title="基于："></a>基于：</h1><p><strong>onemanger +阿里云函数计算Fc</strong> </p><h1 id="demo"><a href="#demo" class="headerlink" title="demo:"></a>demo:</h1><h2 id="视频："><a href="#视频：" class="headerlink" title="视频："></a>视频：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer &quot;url=https://pan.runrab.com/video/%E4%B9%A6%E8%AE%B0%E8%88%9E.mp4&quot; &quot;pic=https://xxxxxxx.jpg&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="dplayer使用hexo-tag-dplayer"><a href="#dplayer使用hexo-tag-dplayer" class="headerlink" title="dplayer使用hexo-tag-dplayer"></a>dplayer使用hexo-tag-dplayer</h3><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"theme":"#FADFA3","loop":true,"video":{"url":"https://pan.runrab.com/video/%E4%B9%A6%E8%AE%B0%E8%88%9E.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
      <categories>
          
          <category> me </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我的网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的图床</title>
      <link href="/archives/2e4464e.html"/>
      <url>/archives/2e4464e.html</url>
      
        <content type="html"><![CDATA[<h3 id="首先说明项目来源：https-github-com-XPoet-picx"><a href="#首先说明项目来源：https-github-com-XPoet-picx" class="headerlink" title="首先说明项目来源：https://github.com/XPoet/picx"></a>首先说明项目来源：<a href="https://github.com/XPoet/picx">https://github.com/XPoet/picx</a></h3><p>我clone了一份放在了我的另一个github上</p><p>部署基于vercel</p><p>cdn by jsdeliver 但是我只会少量使用，也不建议各位大量使用。jsdeliver官方禁止作为图床，可能会被封号,但我用上几十几百M应该不碍事吧。</p><p>cdn by vercel 官方给的一月好像是100G。主用。</p><p>存储 by Github 仓库大小限制(一般不会用到1G)</p><p>图片压缩 by imgBot  地址<a href="https://github.com/marketplace/imgbot">https://github.com/marketplace/imgbot</a> 选择的为免费计划 github push 后图片会被github action 自动压缩.</p><p>demo : jsdeliver:  <a href="https://cdn.jsdelivr.net/gh/hs-p/pic@main/001.5pa8cg96zfs0.jpg">https://cdn.jsdelivr.net/gh/hs-p/pic@main/001.5pa8cg96zfs0.jpg</a></p><p><img src="https://cdn.jsdelivr.net/gh/hs-p/pic@main/001.5pa8cg96zfs0.jpg" alt="https://cdn.jsdelivr.net/gh/hs-p/pic@main/001.5pa8cg96zfs0.jpg"></p><p>vercel: <a href="https://img-plus.vercel.app/001.5pa8cg96zfs0.jpg">https://img-plus.vercel.app/001.5pa8cg96zfs0.jpg</a></p><p><img src="https://img-plus.vercel.app/001.5pa8cg96zfs0.jpg" alt="https://img-plus.vercel.app/001.5pa8cg96zfs0.jpg"></p><p>等我有时间再搞吧。</p><h1 id="搭建："><a href="#搭建：" class="headerlink" title="搭建："></a>搭建：</h1><p>fork 或者 clone <a href="https://github.com/XPoet/picx">https://github.com/XPoet/picx</a></p><p><strong>到你的github</strong>(别忘了给作者点一个start)</p><p>vercel 导入这个仓库 选择 <strong>vus.js</strong>  (目录是默认就dist不要改动)</p><p><strong>再创建一个****仓库</strong>存图片</p><p>作者给的教程 ：</p><p><img src="https://cdn.jsdelivr.net/gh/hs-p/pic@main/Snipaste_2021-06-23_10-15-33.3wdz5f0tnb20.png" alt="Snipaste_2021-06-23_10-15-33"></p><p><img src="https://cdn.jsdelivr.net/gh/hs-p/pic@main/Snipaste_2021-06-23_10-16-16.6nutemmkips0.png" alt="Snipaste_2021-06-23_10-16-16"></p><p><img src="https://cdn.jsdelivr.net/gh/hs-p/pic@main/Snipaste_2021-06-23_10-16-40.2xgsd8rpm3a0.png" alt="Snipaste_2021-06-23_10-16-40"></p><p>图片压缩作者还没给可以用这个imgbot（选择你图片存储的仓库）</p><p>地址： <a href="https://github.com/marketplace/imgbot">https://github.com/marketplace/imgbot</a></p><p>实在太简单了。想看详细的话可以去看一下这个</p><p><a href="https://www.cnblogs.com/lfri/p/12257277.html">https://www.cnblogs.com/lfri/p/12257277.html</a></p>]]></content>
      
      
      <categories>
          
          <category> me </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pixiv代理</title>
      <link href="/archives/df1b4fb9.html"/>
      <url>/archives/df1b4fb9.html</url>
      
        <content type="html"><![CDATA[<h1 id="pixiv代理"><a href="#pixiv代理" class="headerlink" title="pixiv代理"></a>pixiv代理</h1><h2 id="cloudfare-代理"><a href="#cloudfare-代理" class="headerlink" title="cloudfare 代理"></a>cloudfare 代理</h2><p>地址：https://<strong>i.pximg.net</strong>替换为 <a href="https://pixiv.runrab.workers.dev/">https://pixiv.runrab.workers.dev</a></p><p>例如 https://<strong>i.pximg.net</strong>/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg</p><p>换成</p><p><img src="https://pixiv.runrab.workers.dev/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg" alt="demo"></p><p>也可以用 <a href="https://i.pixiv.cat/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg">https://i.pixiv.cat/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg</a></p><p>来自：<a href="https://pixiv.cat/reverseproxy.html">https://pixiv.cat/reverseproxy.html</a></p><p>nginx 代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_path /path/to/cache levels=1:2 keys_zone=pximg:10m max_size=10g inactive=7d use_temp_path=off;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /path/to/ssl_certificate.crt;</span><br><span class="line">    ssl_certificate_key /path/to/ssl_certificate.key;</span><br><span class="line"></span><br><span class="line">    server_name i.pixiv.cat;</span><br><span class="line">    access_log off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_cache pximg;</span><br><span class="line">    proxy_pass https://i.pximg.net;</span><br><span class="line">    proxy_cache_revalidate on;</span><br><span class="line">    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;</span><br><span class="line">    proxy_cache_lock on;</span><br><span class="line">    add_header X-Cache-Status $upstream_cache_status;</span><br><span class="line">    proxy_set_header Host i.pximg.net;</span><br><span class="line">    proxy_set_header Referer &quot;https://www.pixiv.net/&quot;;</span><br><span class="line"></span><br><span class="line">    proxy_cache_valid 200 7d;</span><br><span class="line">    proxy_cache_valid 404 5m;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cf代理设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(&quot;fetch&quot;, event =&gt; &#123;</span><br><span class="line">  let url = new URL(event.request.url);</span><br><span class="line">  url.hostname = &quot;i.pximg.net&quot;;</span><br><span class="line"></span><br><span class="line">  let request = new Request(url, event.request);</span><br><span class="line">  event.respondWith(</span><br><span class="line">    fetch(request, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        &#x27;Referer&#x27;: &#x27;https://www.pixiv.net/&#x27;,</span><br><span class="line">        &#x27;User-Agent&#x27;: &#x27;Cloudflare Workers&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> pixiv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pixiv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly官方安装文档和魔改教程</title>
      <link href="/archives/b45332b4.html"/>
      <url>/archives/b45332b4.html</url>
      
        <content type="html"><![CDATA[<h1 id="魔改教程"><a href="#魔改教程" class="headerlink" title="魔改教程"></a>魔改教程</h1><h3 id="基于Butterfly主题的分类磁贴（未用）"><a href="#基于Butterfly主题的分类磁贴（未用）" class="headerlink" title="基于Butterfly主题的分类磁贴（未用）"></a>基于Butterfly主题的分类磁贴（未用）</h3><p><a href="https://akilar.top/posts/a9131002/">https://akilar.top/posts/a9131002/</a></p><h3 id="给博客添加B站同款动态banner（放弃版本兼容性不好）"><a href="#给博客添加B站同款动态banner（放弃版本兼容性不好）" class="headerlink" title="给博客添加B站同款动态banner（放弃版本兼容性不好）"></a>给博客添加B站同款动态banner（放弃版本兼容性不好）</h3><p><a href="https://akilar.top/posts/780a2cea/">https://akilar.top/posts/780a2cea/</a></p><h3 id="基于swiper的首页置顶轮播图-hexo-butterfly-swiper"><a href="#基于swiper的首页置顶轮播图-hexo-butterfly-swiper" class="headerlink" title="基于swiper的首页置顶轮播图 hexo-butterfly-swiper"></a>基于swiper的首页置顶轮播图 hexo-butterfly-swiper</h3><p><a href="https://akilar.top/posts/8e1264d1/">https://akilar.top/posts/8e1264d1/</a></p><h2 id="乐特无源码修改-（使用）"><a href="#乐特无源码修改-（使用）" class="headerlink" title="乐特无源码修改 （使用）"></a>乐特无源码修改 （使用）</h2><p><a href="https://butterfly.lete114.top/article/Butterfly-config.html">https://butterfly.lete114.top/article/Butterfly-config.html</a></p><h3 id="Hexo引入阿里矢量图标库（未做）"><a href="#Hexo引入阿里矢量图标库（未做）" class="headerlink" title="Hexo引入阿里矢量图标库（未做）"></a>Hexo引入阿里矢量图标库（未做）</h3><p><a href="https://akilar.top/posts/d2ebecef/">https://akilar.top/posts/d2ebecef/</a></p><h3 id="hls视频流"><a href="#hls视频流" class="headerlink" title="hls视频流"></a>hls视频流</h3><p><a href="https://butterfly.lete114.top/article/jsdelivr-video.html">https://butterfly.lete114.top/article/jsdelivr-video.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;video id=&quot;video&quot; preload muted loop autoplay style=&quot;height: 100%;width: 100%;object-fit: cover;&quot;&gt;</span><br><span class="line">&lt;/video&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var video = document.getElementById(&#x27;video&#x27;);</span><br><span class="line">  var videoSrc = &#x27;https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4.m3u8&#x27;;</span><br><span class="line">  if (Hls.isSupported()) &#123;</span><br><span class="line">    var hls = new Hls();</span><br><span class="line">    hls.loadSource(videoSrc);</span><br><span class="line">    hls.attachMedia(video);</span><br><span class="line">    hls.on(Hls.Events.MANIFEST_PARSED, function() &#123;</span><br><span class="line">      video.play();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><script src="https://cdn.jsdelivr.net/npm/hls.js"></script><video id="video" preload muted loop autoplay style="height: 100%;width: 100%;object-fit: cover;"></video><script>  var video = document.getElementById('video');  var videoSrc = 'https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4.m3u8';  if (Hls.isSupported()) {    var hls = new Hls();    hls.loadSource(videoSrc);    hls.attachMedia(video);    hls.on(Hls.Events.MANIFEST_PARSED, function() {      video.play();    });  }</script><h1 id="hexo-插件"><a href="#hexo-插件" class="headerlink" title="hexo 插件"></a>hexo 插件</h1><h4 id="官方文档链接："><a href="#官方文档链接：" class="headerlink" title="官方文档链接："></a>官方文档链接：</h4><p><a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D">https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D</a></p><h4 id="魔改教程链接："><a href="#魔改教程链接：" class="headerlink" title="魔改教程链接："></a>魔改教程链接：</h4><p><a href="https://www.antmoe.com/posts/a811d614/index.html">https://www.antmoe.com/posts/a811d614/index.html</a></p><h4 id="live2d看板娘："><a href="#live2d看板娘：" class="headerlink" title="live2d看板娘："></a>live2d看板娘：</h4><p><a href="https://blog.csdn.net/qq_36239569/article/details/104104894">https://blog.csdn.net/qq_36239569/article/details/104104894</a></p><h4 id="注意问题"><a href="#注意问题" class="headerlink" title="注意问题"></a>注意问题</h4><p>1.安装douban(豆瓣)插件的话，hexo d 不能用来发布，应该用hexo deploy(deploy 和douban重复了)<br>2.常见hexo s报错很可能是yml语法不和规矩。可以通过YAML，YML在线编辑（校验）器 <a href="http://www.bejson.com/validators/yaml_editor/">http://www.bejson.com/validators/yaml_editor/</a> 检查一下<br>3。导航栏图标显示不全 对于Font Awesome 可以搜索inject: 在bottom: 下添加<br>    Font Awesome图标库引入js</p><pre><code>- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;&gt;</code></pre><p>原因：fa前缀在5.x版本中已弃用。新的默认设置是实心的fas样式和品牌的fab样式。<br>官网：<a href="https://fontawesome.dashgame.com/">https://fontawesome.dashgame.com/</a></p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python读取目录下的所有文件</title>
      <link href="/archives/a7831c90.html"/>
      <url>/archives/a7831c90.html</url>
      
        <content type="html"><![CDATA[<h1 id="Python读取目录下的所有文件"><a href="#Python读取目录下的所有文件" class="headerlink" title="Python读取目录下的所有文件"></a>Python读取目录下的所有文件</h1><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">path = &quot;D:/DATA&quot; #文件夹目录</span><br><span class="line">files= os.listdir(path) #得到文件夹下的所有文件名称</span><br><span class="line">s = []</span><br><span class="line">for file in files: #遍历文件夹</span><br><span class="line">    if not os.path.isdir(file): #判断是否是文件夹，不是文件夹才打开</span><br><span class="line">        f = open(path+&quot;/&quot;+file); #打开文件</span><br><span class="line">        iter_f = iter(f); #创建迭代器</span><br><span class="line">        str = &quot;&quot;</span><br><span class="line">        for line in iter_f: #遍历文件，一行行遍历，读取文本</span><br><span class="line">            str = str + line</span><br><span class="line">        s.append(str) #每个文件的文本存到list中</span><br><span class="line">print(s) #打印结果</span><br></pre></td></tr></table></figure><p>]()</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-：关于网站"><a href="#一-：关于网站" class="headerlink" title="一 ：关于网站"></a>一 ：关于网站</h1><h1 id="二：我搭建的"><a href="#二：我搭建的" class="headerlink" title="二：我搭建的"></a>二：我搭建的</h1><h2 id="github代理"><a href="#github代理" class="headerlink" title="github代理"></a>github代理</h2><p>地址：<a href="https://gh.runrab.workers.dev/">https://gh.runrab.workers.dev</a></p><h4 id="使用方法：git-或者直接网页下载"><a href="#使用方法：git-或者直接网页下载" class="headerlink" title="使用方法：git 或者直接网页下载"></a>使用方法：git 或者直接网页下载</h4><p>git clone <a href="https://gh.runrab.workers.dev/%E4%BD%A0%E8%A6%81%E5%85%8B%E9%9A%86%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D%E7%A7%B0%E4%B8%8D%E5%8A%A0.git">https://gh.runrab.workers.dev/你要克隆的仓库名称不加.git</a></p><p>demo :  <a href="https://github.com/ismech/python-get-images-url.git">https://github.com/ismech/python-get-images-url.git</a></p><p>git clone <a href="https://gh.runrab.workers.dev/https://github.com/ismech/python-get-images-url">https://gh.runrab.workers.dev/https://github.com/ismech/python-get-images-url</a></p><h2 id="1-onedrive网盘"><a href="#1-onedrive网盘" class="headerlink" title="1.onedrive网盘"></a>1.onedrive网盘</h2><h4 id="推荐：-https-pan-runrab-com-基于阿里云函数计算FC"><a href="#推荐：-https-pan-runrab-com-基于阿里云函数计算FC" class="headerlink" title="推荐： https://pan.runrab.com/  基于阿里云函数计算FC"></a>推荐： <a href="https://pan.runrab.com/">https://pan.runrab.com/</a>  基于阿里云函数计算FC</h4><h4 id="不推荐："><a href="#不推荐：" class="headerlink" title="不推荐："></a>不推荐：</h4><p>直连地址：<a href="https://runrab.herokuapp.com/">https://runrab.herokuapp.com</a></p><p>cf代理地址：<a href="https://pan.runrab.workers.dev/">https://pan.runrab.workers.dev</a></p><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>图片：<a href="https://pan.runrab.com/images/meizi/btstu/1.jpg">https://pan.runrab.com/images/meizi/btstu/1.jpg</a></p><p><img src="https://pan.runrab.com/images/meizi/btstu/1.jpg"></p><p>视频 <a href="https://pan.runrab.com/video/%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90.mp4">https://pan.runrab.com/video/%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90.mp4</a></p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"video":{"url":"https://pan.runrab.com/video/%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> <h2 id="2：api"><a href="#2：api" class="headerlink" title="2：api"></a>2：api</h2><h4 id="1-图片api"><a href="#1-图片api" class="headerlink" title="1.图片api"></a>1.图片api</h4><p>地址： <a href="https://api.runrab.com/">https://api.runrab.com</a></p><p><a href="https://api-runrab.vercel.app/">https://api-runrab.vercel.app</a></p><p>demo:  <a href="https://api.runrab.com/img/pic">https://api.runrab.com/img/pic</a></p><p>或者 <a href="https://api.runrab.com/img/pic">https://api.runrab.com/img/pic</a></p><p>使用 sqlite3存储数据 内存模式比较复杂,暂时移除，暂时不将不用将文件加载到内存中</p><p>demo: <a href="https://api-runrab.vercel.app/img/pic">https://api-runrab.vercel.app/img/pic</a></p><p>json格式： <a href="https://api.runrab.com/img/json">https://api.runrab.com/img/json</a></p><h3 id="3图床"><a href="#3图床" class="headerlink" title="3图床"></a>3图床</h3><p>地址： <a href="https://pic.runrab.com/">https://pic.runrab.com/</a></p><p>demo:  <a href="https://cdn.jsdelivr.net/gh/hs-p/pic@main/003.35h6t10ff980.jpg">https://cdn.jsdelivr.net/gh/hs-p/pic@main/003.35h6t10ff980.jpg</a></p><p><img src="https://cdn.jsdelivr.net/gh/hs-p/pic@main/003.35h6t10ff980.jpg"></p><p>vercel代理 <a href="https://img-plus.vercel.app/003.35h6t10ff980.jpg">https://img-plus.vercel.app/003.35h6t10ff980.jpg</a></p><p><img src="https://img-plus.vercel.app/003.35h6t10ff980.jpg"></p><h2 id="4：pixiv代理"><a href="#4：pixiv代理" class="headerlink" title="4：pixiv代理"></a>4：pixiv代理</h2><h3 id="cloudfare-代理"><a href="#cloudfare-代理" class="headerlink" title="cloudfare 代理"></a>cloudfare 代理</h3><p>地址：https://<strong>i.pximg.net</strong>替换为 <a href="https://pixiv.runrab.workers.dev/">https://pixiv.runrab.workers.dev</a></p><p>例如 https://<strong>i.pximg.net</strong>/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg</p><p>换成  <a href="https://pixiv.runrab.workers.dev/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg">https://pixiv.runrab.workers.dev/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg</a></p><p><img src="https://pixiv.runrab.workers.dev/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg"></p><h3 id="5视频播放器"><a href="#5视频播放器" class="headerlink" title="5视频播放器"></a>5视频播放器</h3><p><a href="https://v.mikuo.top/bliplayer/">https://v.mikuo.top/bliplayer/</a></p><p>demo: 视频来自抖音 @四宫辉夜</p><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"video":{"url":"https://pan.runrab.com/e5/video/douyin/%E7%A2%A7%E8%93%9D%E6%A1%A3%E6%A1%88.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> <p>demo: <a href="https://v.mikuo.top/bliplayer/?url=https://pan.runrab.com/video/%25E5%25A4%25A9%25E6%25B0%2594%25E4%25B9%258B%25E5%25AD%2590.mp4">demo</a></p><h3 id="6壁纸"><a href="#6壁纸" class="headerlink" title="6壁纸"></a>6壁纸</h3><p>demo：</p><p><a href="https://v.mikuo.top/wallpaper">点我前往</a></p>]]></content>
      
      
      <categories>
          
          <category> me </category>
          
      </categories>
      
      
        <tags>
            
            <tag> me </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
