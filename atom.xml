<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>runrab</title>
  
  <subtitle>runrab</subtitle>
  <link href="https://runrab.com/atom.xml" rel="self"/>
  
  <link href="https://runrab.com/"/>
  <updated>2022-04-02T06:34:45.124Z</updated>
  <id>https://runrab.com/</id>
  
  <author>
    <name>RunRab</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python裁剪图片</title>
    <link href="https://runrab.com/posts/dbc0c148.html"/>
    <id>https://runrab.com/posts/dbc0c148.html</id>
    <published>2022-04-02T11:08:13.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python裁剪图片"><a href="#Python裁剪图片" class="headerlink" title="Python裁剪图片"></a>Python裁剪图片</h1><h2 id="个人适用版本"><a href="#个人适用版本" class="headerlink" title="个人适用版本"></a>个人适用版本</h2><p><strong>800x400 裁剪后符合大小</strong></p><p><strong>1920x400 裁剪后符合比例</strong></p><p><strong>配合imgbot 自动压缩无需处理压缩</strong></p><p><strong>cdn by jsdeliver</strong> </p><h4 id="待实现链接自动注入到文章"><a href="#待实现链接自动注入到文章" class="headerlink" title="待实现链接自动注入到文章"></a><strong>待实现链接自动注入到文章</strong></h4><p>链接url 分别放在 max.txt mid.txt min.txt</p><p>文件夹 max（原图） mid（比例为1920x400）  min（大小为800x400）</p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mpath = os.getcwd()</span></span><br><span class="line"><span class="comment"># print(Mpath)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原来文件夹</span></span><br><span class="line">source_dirs = <span class="string">&#x27;./max&#x27;</span></span><br><span class="line"><span class="comment"># 目标文件夹</span></span><br><span class="line">target_dirs = <span class="string">&#x27;./mid&#x27;</span></span><br><span class="line"><span class="comment"># 目标文件夹2</span></span><br><span class="line">target_dirs2 = <span class="string">&#x27;./min&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到图片的链接</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getListFiles</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="keyword">assert</span> os.path.isdir(path), <span class="string">&#x27;%s not exist.&#x27;</span> % path</span><br><span class="line">    ret = []</span><br><span class="line">    <span class="comment"># 已经有的文件夹</span></span><br><span class="line">    has_dirs = []</span><br><span class="line">    <span class="comment"># 目录创建</span></span><br><span class="line">    <span class="comment"># 暂时有一个文件夹下多文件 读取问题没 解决 dirs files均为列表  已经解决</span></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(path):</span><br><span class="line">        <span class="comment"># print(&#x27;%s, %s, %s&#x27; % (root, dirs, files))</span></span><br><span class="line">        <span class="comment"># print(&#x27;%s, %s&#x27; % (dirs,files))</span></span><br><span class="line">        s = <span class="string">&#x27;&#x27;</span>.join(root) + <span class="string">&#x27;/&#x27;</span> + <span class="string">&#x27;&#x27;</span>.join(dirs)</span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">not</span> <span class="keyword">in</span> has_dirs:</span><br><span class="line">            has_dirs.append(s)</span><br><span class="line">        <span class="keyword">if</span> path == source_dirs:</span><br><span class="line">            create_dirs(has_dirs)</span><br><span class="line">        <span class="keyword">for</span> filesPath <span class="keyword">in</span> files:</span><br><span class="line">            ret.append(os.path.join(root, filesPath))</span><br><span class="line">    <span class="comment"># print(ret)</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建不存在文件夹</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_dirs</span>(<span class="params">has_dirs</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> has_dirs:</span><br><span class="line">        i = i.replace(source_dirs, target_dirs)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(i):</span><br><span class="line">            os.makedirs(i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> has_dirs:</span><br><span class="line">        i = i.replace(source_dirs, target_dirs2)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(i):</span><br><span class="line">            os.makedirs(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩放</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scale</span>(<span class="params">i</span>):</span><br><span class="line">    img = Image.<span class="built_in">open</span>(<span class="string">&#x27;&#x27;</span> + i)</span><br><span class="line">    <span class="comment"># 目标地址</span></span><br><span class="line">    bb = i.replace(source_dirs, target_dirs2)</span><br><span class="line">    bb = bb.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    width, height = img.size</span><br><span class="line">    w_s = <span class="built_in">int</span>(width / (width / <span class="number">800</span>))  <span class="comment"># 长宽缩小两倍</span></span><br><span class="line">    h_s = <span class="built_in">int</span>(height / (height / <span class="number">400</span>))  <span class="comment"># 长宽缩小两倍</span></span><br><span class="line">    img = img.resize((w_s, h_s), Image.ANTIALIAS)</span><br><span class="line">    blank = (w_s - h_s) / <span class="number">2</span></span><br><span class="line">    <span class="comment"># region = img.crop((0, -blank, w_s, w_s - blank))</span></span><br><span class="line">    region = img.crop((<span class="number">0</span>, <span class="number">0</span>, w_s, h_s))</span><br><span class="line">    region.save(bb)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 裁剪</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resize</span>(<span class="params">i</span>):</span><br><span class="line">    img = Image.<span class="built_in">open</span>(<span class="string">&#x27;&#x27;</span> + i)</span><br><span class="line">    <span class="comment"># 目标地址</span></span><br><span class="line">    bb = i.replace(source_dirs, target_dirs)</span><br><span class="line">    bb = bb.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    width, height = img.size</span><br><span class="line">    he = (width * <span class="number">400</span>) / <span class="number">1920</span></span><br><span class="line">    wi = (height - he) / <span class="number">2</span></span><br><span class="line">    <span class="comment"># print(he)</span></span><br><span class="line">    <span class="comment"># print(width,height)</span></span><br><span class="line">    <span class="comment"># 前两个坐标点是左上角坐标</span></span><br><span class="line">    <span class="comment"># 后两个坐标点是右下角坐标</span></span><br><span class="line">    <span class="comment"># width在前， height在后</span></span><br><span class="line">    box = (<span class="number">0</span>, wi, width, he + wi)</span><br><span class="line">    region = img.crop(box)</span><br><span class="line">    <span class="comment"># cc=bb.replace(&#x27;\\&#x27;,&#x27;&#x27;)</span></span><br><span class="line">    <span class="comment"># if os.path.exists(cc):</span></span><br><span class="line">    <span class="comment"># os.makedirs(cc)</span></span><br><span class="line">    <span class="comment"># 因为保存裁剪后的文件要求文件夹要存在故单独处理</span></span><br><span class="line">    region.save(bb)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接为链接</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">join_url</span>(<span class="params">utl_txt, lst</span>):</span><br><span class="line">    file = utl_txt</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">        i = i.replace(<span class="string">&#x27;./&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        i = i.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        i1 = i.replace(<span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;mid&#x27;</span>)</span><br><span class="line">        i2 = i.replace(<span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">                url = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/runrab/cdn2@master/img&#x27;</span> + i + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> f1.readlines():</span><br><span class="line">                    f.write(url)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;mid.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;mid.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">                url = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/runrab/cdn2@master/img&#x27;</span> + i2 + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> f1.readlines():</span><br><span class="line">                    f.write(url)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;min.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;min.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">                url = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/runrab/cdn2@master/img&#x27;</span> + i2 + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> f1.readlines():</span><br><span class="line">                    f.write(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">declImg</span>():</span><br><span class="line">    a = getListFiles(source_dirs)</span><br><span class="line">    b = getListFiles(target_dirs)</span><br><span class="line">    c = getListFiles(target_dirs2)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> b:</span><br><span class="line">            b.append(i)</span><br><span class="line">            resize(i)</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> c:</span><br><span class="line">            c.append(i)</span><br><span class="line">            scale(i)</span><br><span class="line">    join_url(<span class="string">r&quot;max.txt&quot;</span>, a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declImg()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#导出requirements.txt</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Python裁剪图片&quot;&gt;&lt;a href=&quot;#Python裁剪图片&quot; class=&quot;headerlink&quot; title=&quot;Python裁剪图片&quot;&gt;&lt;/a&gt;Python裁剪图片&lt;/h1&gt;&lt;h2 id=&quot;个人适用版本&quot;&gt;&lt;a href=&quot;#个人适用版本&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="python" scheme="https://runrab.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pixiv代理</title>
    <link href="https://runrab.com/posts/df1b4fb9.html"/>
    <id>https://runrab.com/posts/df1b4fb9.html</id>
    <published>2022-04-02T11:05:08.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pixiv代理"><a href="#pixiv代理" class="headerlink" title="pixiv代理"></a>pixiv代理</h1><h2 id="cloudfare-代理"><a href="#cloudfare-代理" class="headerlink" title="cloudfare 代理"></a>cloudfare 代理</h2><p>地址：<a href="https://**i.pximg.net**替换为">https://**i.pximg.net**替换为</a> <a href="https://pixiv.runrab.workers.dev">https://pixiv.runrab.workers.dev</a></p><p>例如 <a href="https://**i.pximg.net**/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg">https://**i.pximg.net**/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg</a></p><p>换成</p><p><img src="https://pixiv.runrab.workers.dev/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg" alt="demo"></p><p>也可以用 <a href="https://i.pixiv.cat/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg">https://i.pixiv.cat/img-original/img/2020/06/05/00/00/07/82092623_p0.jpg</a></p><p>来自：<a href="https://pixiv.cat/reverseproxy.html">https://pixiv.cat/reverseproxy.html</a></p><p>nginx 代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_path /path/to/cache levels=1:2 keys_zone=pximg:10m max_size=10g inactive=7d use_temp_path=off;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /path/to/ssl_certificate.crt;</span><br><span class="line">    ssl_certificate_key /path/to/ssl_certificate.key;</span><br><span class="line"></span><br><span class="line">    server_name i.pixiv.cat;</span><br><span class="line">    access_log off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_cache pximg;</span><br><span class="line">    proxy_pass https://i.pximg.net;</span><br><span class="line">    proxy_cache_revalidate on;</span><br><span class="line">    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;</span><br><span class="line">    proxy_cache_lock on;</span><br><span class="line">    add_header X-Cache-Status $upstream_cache_status;</span><br><span class="line">    proxy_set_header Host i.pximg.net;</span><br><span class="line">    proxy_set_header Referer &quot;https://www.pixiv.net/&quot;;</span><br><span class="line"></span><br><span class="line">    proxy_cache_valid 200 7d;</span><br><span class="line">    proxy_cache_valid 404 5m;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cf代理设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(&quot;fetch&quot;, event =&gt; &#123;</span><br><span class="line">  let url = new URL(event.request.url);</span><br><span class="line">  url.hostname = &quot;i.pximg.net&quot;;</span><br><span class="line"></span><br><span class="line">  let request = new Request(url, event.request);</span><br><span class="line">  event.respondWith(</span><br><span class="line">    fetch(request, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        &#x27;Referer&#x27;: &#x27;https://www.pixiv.net/&#x27;,</span><br><span class="line">        &#x27;User-Agent&#x27;: &#x27;Cloudflare Workers&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;pixiv代理&quot;&gt;&lt;a href=&quot;#pixiv代理&quot; class=&quot;headerlink&quot; title=&quot;pixiv代理&quot;&gt;&lt;/a&gt;pixiv代理&lt;/h1&gt;&lt;h2 id=&quot;cloudfare-代理&quot;&gt;&lt;a href=&quot;#cloudfare-代理&quot; class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>npm无法加载文件xx 因为在此系统上禁止运行脚本</title>
    <link href="https://runrab.com/posts/8c6868be.html"/>
    <id>https://runrab.com/posts/8c6868be.html</id>
    <published>2022-04-02T10:56:57.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、npm-无法加载文件-你的nodejs路径-npm-ps1，因为在此系统上禁止运行脚本。"><a href="#一、npm-无法加载文件-你的nodejs路径-npm-ps1，因为在此系统上禁止运行脚本。" class="headerlink" title="一、npm : 无法加载文件 (你的nodejs路径)\npm.ps1，因为在此系统上禁止运行脚本。"></a>一、npm : 无法加载文件 (你的nodejs路径)\npm.ps1，因为在此系统上禁止运行脚本。</h2><p>我遇到的是webstorm 的npm 命令行经常无法运行npm install<br>二、因为在此系统上禁止运行脚本</p><ol><li>get-ExecutionPolicy 查看权限</li><li>输出：Restricted ：受限制的  </li><li>Restricted 表示状态是禁止的，那就给个权限：  Set-ExecutionPolicy -Scope CurrentUser</li><li>输入：RemoteSigned</li><li>验证一下：get-ExecutionPolicy    显示：RemoteSigned 就可以了</li><li>get-ExecutionPolicy<br>显示：RemoteSigned 就可以了</li><li>运行 npm run install 可以执行</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、npm-无法加载文件-你的nodejs路径-npm-ps1，因为在此系统上禁止运行脚本。&quot;&gt;&lt;a href=&quot;#一、npm-无法加载文件-你的nodejs路径-npm-ps1，因为在此系统上禁止运行脚本。&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="node" scheme="https://runrab.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>加密</title>
    <link href="https://runrab.com/posts/c31b0edc.html"/>
    <id>https://runrab.com/posts/c31b0edc.html</id>
    <published>2022-04-02T10:54:10.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3295811ed1cb224d4854634050f11de5d16ec277101831d61c4eb31296cf7442">4630436162ade97ba2718b7d0c4b3b6351ade09e539dfebeb5402828e29e64b08c9701b6edbdb4125ad9b6a1fe589e28527dbc657601a48cc7afa1df0b6635e894adf86ac703ec4165978e225628333a9e1ab1d0f2ac5a9355a52fc040929d92b3a02bfbeeaffbaebeaa9919d730d8165dd7139ee3f3b53397f3efc2b6fa10ed874b020fa749f62cc9f9464365e207617b37c913999d687a25f6f824434062de8a23083af63f2fb730ef34152a5f3ba65e2b02cdf8c16874c1b8fe55d7414376d07321791ff62621ac17f090bc5600e0e48dd3fd39e6fbf03daded2af01f7439</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>主题修改</title>
    <link href="https://runrab.com/posts/b9cbbea9.html"/>
    <id>https://runrab.com/posts/b9cbbea9.html</id>
    <published>2022-04-02T10:53:32.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo插件</title>
    <link href="https://runrab.com/posts/5a3fb175.html"/>
    <id>https://runrab.com/posts/5a3fb175.html</id>
    <published>2022-04-02T10:53:16.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>centos7搭建cdh</title>
    <link href="https://runrab.com/posts/1c41ca7d.html"/>
    <id>https://runrab.com/posts/1c41ca7d.html</id>
    <published>2022-04-02T10:42:28.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>高校毕业生去向信息跟踪系统</title>
    <link href="https://runrab.com/posts/b5b3d199.html"/>
    <id>https://runrab.com/posts/b5b3d199.html</id>
    <published>2022-04-02T09:34:12.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高校毕业生去向信息跟踪系统"><a href="#高校毕业生去向信息跟踪系统" class="headerlink" title="高校毕业生去向信息跟踪系统"></a>高校毕业生去向信息跟踪系统</h1><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><h3 id="架构选择"><a href="#架构选择" class="headerlink" title="架构选择"></a>架构选择</h3><ol><li>直接基于jeecg-boot低代码开发而来， 采用前后端分离架构：SpringBoot，Mybatis，Shiro，JWT，Vue&amp;Ant Design。</li><li>MySQL存储数据 redis缓存 包含token </li><li>前端 ant-design-vue vuex存储数据</li><li>app uniapp开发 后端对接到后台接口</li></ol><h2 id="后台端"><a href="#后台端" class="headerlink" title="后台端"></a>后台端</h2><h2 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h2><h2 id="app"><a href="#app" class="headerlink" title="app"></a>app</h2><h3 id="uniapp开发"><a href="#uniapp开发" class="headerlink" title="uniapp开发"></a>uniapp开发</h3><h4 id="分教师端和学生端"><a href="#分教师端和学生端" class="headerlink" title="分教师端和学生端"></a>分教师端和学生端</h4><ol><li>再表格中并为引入uni-form，原生的form表单</li></ol><h4 id="学生端"><a href="#学生端" class="headerlink" title="学生端"></a>学生端</h4><ol><li>学生个人基本信息管理</li><li>留言发布</li><li>招聘信息查看</li><li>密码修改</li><li>分权限查看</li></ol><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h3><h3 id="需求问答"><a href="#需求问答" class="headerlink" title="需求问答"></a>需求问答</h3><h3 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h3><ol><li>当我尝试将信息发布的时候，发现内部消息会存到一张表中，然而当发布消息的时候，消息的id会被存储在另一张表中id，并且只能定向发送给指定用户，或者全体成员，然而指定用户只能一个一个指定，虽然我已经将指定用户的方法改为模糊查询但是我需要定向部门发布，故将定向发布中存储的部门id作为userid存储再发布的表中，</li><li>当切换用户的时候store中数据并为被及时清空，我用admin用户登录，然后用别的用户登录，出现仍旧是admin用户。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;高校毕业生去向信息跟踪系统&quot;&gt;&lt;a href=&quot;#高校毕业生去向信息跟踪系统&quot; class=&quot;headerlink&quot; title=&quot;高校毕业生去向信息跟踪系统&quot;&gt;&lt;/a&gt;高校毕业生去向信息跟踪系统&lt;/h1&gt;&lt;h2 id=&quot;项目介绍&quot;&gt;&lt;a href=&quot;#项目介绍&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo自动构建</title>
    <link href="https://runrab.com/posts/7e7068.html"/>
    <id>https://runrab.com/posts/7e7068.html</id>
    <published>2022-03-31T09:19:50.000Z</published>
    <updated>2022-04-02T06:34:45.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo自动构建"><a href="#hexo自动构建" class="headerlink" title="hexo自动构建"></a>hexo自动构建</h2><h3 id="1-需求描述："><a href="#1-需求描述：" class="headerlink" title="1.需求描述："></a>1.需求描述：</h3><p>构建工具一堆，vercel也能构建，但是我服务器有国内的，我希望自己部署在自己服务器上，自动构建比较难，所以用github action生成静态后，由服务器通过git拉取。如果嫌弃github慢。可以试试的方法，不建议用gitee。</p><h3 id="2-整体描述"><a href="#2-整体描述" class="headerlink" title="2.整体描述:"></a>2.整体描述:</h3><p>Github action负责生成静态代码，并执行curl 的post请求指定服务器的接口，服务器接受请求后拉取静态文件。</p><p>或者直接Github action发送curl 的post请求指定服务器的接口，然后服务器通过源码自己构建（不建议）</p><h3 id="3-Github-action-自动构建"><a href="#3-Github-action-自动构建" class="headerlink" title="3.Github action 自动构建"></a>3.Github action 自动构建</h3><h3 id="4-服务器post请求文件"><a href="#4-服务器post请求文件" class="headerlink" title="4.服务器post请求文件"></a>4.服务器post请求文件</h3><h4 id="4-1-php版本"><a href="#4-1-php版本" class="headerlink" title="4.1 php版本"></a>4.1 php版本</h4><p>服务器post请求文件(php消耗少，暂定。虽然java一个方法就解决了，但是为了这一个方法不合适)</p><h4 id="4-2-java版本"><a href="#4-2-java版本" class="headerlink" title="4.2 java版本"></a>4.2 java版本</h4><h3 id="5-在线文档编写"><a href="#5-在线文档编写" class="headerlink" title="5.在线文档编写"></a>5.在线文档编写</h3><p>建议使用:   <a href="https://hexoplusplus.js.org/">hexoplusplus</a></p><p>好好看看文配置有点多: <a href="https://hexoplusplus.js.org/start/">官方文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hexo自动构建&quot;&gt;&lt;a href=&quot;#hexo自动构建&quot; class=&quot;headerlink&quot; title=&quot;hexo自动构建&quot;&gt;&lt;/a&gt;hexo自动构建&lt;/h2&gt;&lt;h3 id=&quot;1-需求描述：&quot;&gt;&lt;a href=&quot;#1-需求描述：&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://runrab.com/tags/hexo/"/>
    
  </entry>
  
</feed>
